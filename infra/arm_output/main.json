{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "17989780927675693416"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for all resources."
      }
    },
    "suffix": {
      "type": "string",
      "defaultValue": "[uniqueString(utcNow())]"
    },
    "cdmContainerUrl": {
      "type": "string",
      "defaultValue": "https://omoppublic.blob.core.windows.net/shared/synthea1k/",
      "metadata": {
        "description": "The url of the container where the cdm is stored"
      }
    },
    "cdmSasToken": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The sas token to access the cdm container"
      }
    },
    "postgresOMOPCDMDatabaseName": {
      "type": "string",
      "defaultValue": "synthea1k",
      "metadata": {
        "description": "The name of the database to create for the OMOP CDM"
      }
    },
    "appPlanSkuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "S1",
        "S2",
        "S3",
        "B1",
        "B2",
        "B3",
        "P1V2",
        "P2V2",
        "P3V2",
        "P1V3",
        "P2V3",
        "P3V3"
      ],
      "metadata": {
        "description": "The app service plan sku"
      }
    },
    "postgresSku": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "allowedValues": [
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_D48s_v3",
        "Standard_D64s_v3",
        "Standard_D2ds_v4",
        "Standard_D4ds_v4",
        "Standard_D8ds_v4",
        "Standard_D16ds_v4",
        "Standard_D32ds_v4",
        "Standard_D48ds_v4",
        "Standard_D64ds_v4",
        "Standard_D64ds_v4",
        "Standard_B1ms",
        "Standard_B2s",
        "Standard_B2ms",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_B12ms",
        "Standard_B16ms",
        "Standard_B20ms"
      ],
      "metadata": {
        "description": "The postgres sku"
      }
    },
    "postgresStorageSize": {
      "type": "int",
      "defaultValue": 32,
      "allowedValues": [
        32,
        64,
        128,
        256,
        512,
        1024,
        2048,
        4096,
        8192,
        16384
      ],
      "metadata": {
        "description": "The size of the postgres database storage"
      }
    },
    "postgresAdminPassword": {
      "type": "securestring",
      "defaultValue": "[uniqueString(newGuid())]",
      "metadata": {
        "description": "The password for the postgres admin user"
      }
    },
    "postgresWebapiAdminPassword": {
      "type": "securestring",
      "defaultValue": "[uniqueString(newGuid())]",
      "metadata": {
        "description": "The password for the postgres webapi admin user"
      }
    },
    "postgresWebapiAppPassword": {
      "type": "securestring",
      "defaultValue": "[uniqueString(newGuid())]",
      "metadata": {
        "description": "The password for the postgres webapi app user"
      }
    },
    "postgresOMOPCDMPassword": {
      "type": "securestring",
      "defaultValue": "[uniqueString(newGuid())]",
      "metadata": {
        "description": "The password for the postgres OMOP CDM user"
      }
    },
    "atlasSecurityAdminPassword": {
      "type": "securestring",
      "defaultValue": "[uniqueString(newGuid())]",
      "metadata": {
        "description": "The password for atlas security admin user"
      }
    },
    "atlasUsersList": {
      "type": "securestring",
      "metadata": {
        "description": "Comma-delimited user list for atlas. Do not use admin as a username. It causes problems with Atlas security"
      }
    },
    "localDebug": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enables local access for debugging."
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "192.168.49.0/24",
      "metadata": {
        "description": "The virtual network address prefix. Please provide a /24 CIRD prefix."
      }
    }
  },
  "variables": {
    "tenantId": "[subscription().tenantId]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[format('asp-{0}', parameters('suffix'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('appPlanSkuName')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      },
      "metadata": {
        "description": "Creates the app service plan"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[format('kv-{0}', parameters('suffix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "accessPolicies": [],
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[variables('tenantId')]",
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      },
      "metadata": {
        "description": "Creates the key vault"
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', format('kv-{0}', parameters('suffix')))]",
      "name": "[format('kv-{0}', parameters('suffix'))]",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}', parameters('suffix')))]",
        "logs": [
          {
            "category": "AuditEvent",
            "enabled": true,
            "retentionPolicy": {
              "days": 30,
              "enabled": true
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', format('kv-{0}', parameters('suffix')), 'atlas-security-admin-password')]",
      "properties": {
        "value": "[parameters('atlasSecurityAdminPassword')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[format('log-{0}', parameters('suffix'))]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "atlasVirtualNetwork",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          },
          "addressPrefix": {
            "value": "[parameters('addressPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "5512286129982062102"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "suffix": {
              "type": "string"
            },
            "addressPrefix": {
              "type": "string",
              "metadata": {
                "description": "The address space for this Virtual Network."
              }
            }
          },
          "variables": {
            "copy": [
              {
                "name": "subnetAddressPrefixes",
                "count": "[length(range(0, 8))]",
                "input": "[cidrSubnet(parameters('addressPrefix'), 27, range(0, 8)[copyIndex('subnetAddressPrefixes')])]"
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-05-01",
              "name": "[format('vnet-{0}', parameters('suffix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('addressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "WebApp",
                    "properties": {
                      "addressPrefix": "[variables('subnetAddressPrefixes')[0]]"
                    }
                  },
                  {
                    "name": "WebAppOutbound",
                    "properties": {
                      "addressPrefix": "[variables('subnetAddressPrefixes')[1]]",
                      "delegations": [
                        {
                          "name": "WebAppDelegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "PostgreSQL",
                    "properties": {
                      "addressPrefix": "[variables('subnetAddressPrefixes')[2]]",
                      "delegations": [
                        {
                          "name": "PostgreSQLDelegation",
                          "properties": {
                            "serviceName": "Microsoft.DBforPostgreSQL/flexibleServers"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "private.postgres.database.azure.com",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', 'private.postgres.database.azure.com', format('psql-{0}', parameters('suffix')))]",
              "properties": {
                "ttl": 30,
                "aRecords": [
                  {
                    "ipv4Address": "[cidrHost(variables('subnetAddressPrefixes')[2], 4)]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'private.postgres.database.azure.com')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', 'private.postgres.database.azure.com', format('private-link-{0}', parameters('suffix')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": true,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('suffix')))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'private.postgres.database.azure.com')]",
                "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('suffix')))]"
              ]
            }
          ],
          "outputs": {
            "privateDNSZoneID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', 'private.postgres.database.azure.com')]"
            },
            "postgresVirtualSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('suffix')), 'PostgreSQL')]"
            },
            "webAppVirtualSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('suffix')), 'WebApp')]"
            },
            "webAppOutboundVirtualSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('suffix')), 'WebAppOutbound')]"
            },
            "virtualNetworkId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('suffix')))]"
            },
            "privateDNSZoneName": {
              "type": "string",
              "value": "private.postgres.database.azure.com"
            }
          }
        }
      },
      "metadata": {
        "description": "Creates the database server, users and groups required for ohdsi webapi"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "atlasDatabase",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          },
          "keyVaultName": {
            "value": "[format('kv-{0}', parameters('suffix'))]"
          },
          "postgresSku": {
            "value": "[parameters('postgresSku')]"
          },
          "postgresStorageSize": {
            "value": "[parameters('postgresStorageSize')]"
          },
          "postgresAdminPassword": {
            "value": "[parameters('postgresAdminPassword')]"
          },
          "postgresWebapiAdminPassword": {
            "value": "[parameters('postgresWebapiAdminPassword')]"
          },
          "postgresWebapiAppPassword": {
            "value": "[parameters('postgresWebapiAppPassword')]"
          },
          "localDebug": {
            "value": "[parameters('localDebug')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}', parameters('suffix')))]"
          },
          "privateDNSZoneId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasVirtualNetwork'), '2022-09-01').outputs.privateDNSZoneID.value]"
          },
          "postgresVirtualSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasVirtualNetwork'), '2022-09-01').outputs.postgresVirtualSubnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "2889061701527764001"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "suffix": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "postgresSku": {
              "type": "string"
            },
            "postgresStorageSize": {
              "type": "int"
            },
            "postgresAdminPassword": {
              "type": "securestring"
            },
            "postgresWebapiAdminPassword": {
              "type": "securestring"
            },
            "postgresWebapiAppPassword": {
              "type": "securestring"
            },
            "localDebug": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enables local access for debugging."
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "privateDNSZoneId": {
              "type": "string"
            },
            "postgresVirtualSubnetId": {
              "type": "string"
            }
          },
          "variables": {
            "postgresAdminUsername": "postgres_admin",
            "postgresWebapiAdminUsername": "ohdsi_admin_user",
            "postgresWebapiAdminRole": "ohdsi_admin",
            "postgresWebapiAppUsername": "ohdsi_app_user",
            "postgresWebapiAppRole": "ohdsi_app",
            "postgresWebApiDatabaseName": "atlas_webapi_db",
            "postgresSchemaName": "webapi",
            "postgresVersion": "14",
            "logCategories": [
              "PostgreSQLLogs"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'postgres-admin-password')]",
              "properties": {
                "value": "[parameters('postgresAdminPassword')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'ohdsi-admin-password')]",
              "properties": {
                "value": "[parameters('postgresWebapiAdminPassword')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'ohdsi-app-password')]",
              "properties": {
                "value": "[parameters('postgresWebapiAppPassword')]"
              }
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers",
              "apiVersion": "2022-12-01",
              "name": "[format('psql-{0}', parameters('suffix'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('postgresSku')]",
                "tier": "[if(contains(parameters('postgresSku'), 'B'), 'Burstable', 'GeneralPurpose')]"
              },
              "properties": {
                "version": "[variables('postgresVersion')]",
                "administratorLogin": "[variables('postgresAdminUsername')]",
                "administratorLoginPassword": "[parameters('postgresAdminPassword')]",
                "storage": {
                  "storageSizeGB": "[parameters('postgresStorageSize')]"
                },
                "backup": {
                  "backupRetentionDays": 7,
                  "geoRedundantBackup": "Disabled"
                },
                "network": {
                  "delegatedSubnetResourceId": "[parameters('postgresVirtualSubnetId')]",
                  "privateDnsZoneArmResourceId": "[parameters('privateDNSZoneId')]"
                }
              }
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}/{1}', format('psql-{0}', parameters('suffix')), 'AllowAllAzureIps')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-{0}', parameters('suffix')))]"
              ]
            },
            {
              "condition": "[parameters('localDebug')]",
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}/{1}', format('psql-{0}', parameters('suffix')), 'AllowAllIps')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-{0}', parameters('suffix')))]"
              ]
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}/{1}', format('psql-{0}', parameters('suffix')), variables('postgresWebApiDatabaseName'))]",
              "properties": {
                "charset": "utf8",
                "collation": "en_US.utf8"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-{0}', parameters('suffix')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.DBforPostgreSQL/flexibleServers/{0}', format('psql-{0}', parameters('suffix')))]",
              "name": "[format('psql-{0}', parameters('suffix'))]",
              "properties": {
                "copy": [
                  {
                    "name": "logs",
                    "count": "[length(variables('logCategories'))]",
                    "input": {
                      "category": "[variables('logCategories')[copyIndex('logs')]]",
                      "enabled": true,
                      "retentionPolicy": {
                        "days": 30,
                        "enabled": true
                      }
                    }
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-{0}', parameters('suffix')))]"
              ]
            }
          ],
          "outputs": {
            "postgresWebapiAdminSecretName": {
              "type": "string",
              "value": "ohdsi-admin-password"
            },
            "postgresWebapiAppSecretName": {
              "type": "string",
              "value": "ohdsi-app-password"
            },
            "postgresServerName": {
              "type": "string",
              "value": "[format('psql-{0}', parameters('suffix'))]"
            },
            "postgresServerFullyQualifiedDomainName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format('psql-{0}', parameters('suffix'))), '2022-12-01').fullyQualifiedDomainName]"
            },
            "postgresSchemaName": {
              "type": "string",
              "value": "[variables('postgresSchemaName')]"
            },
            "postgresWebapiAdminUsername": {
              "type": "string",
              "value": "[variables('postgresWebapiAdminUsername')]"
            },
            "postgresWebapiAppUsername": {
              "type": "string",
              "value": "[variables('postgresWebapiAppUsername')]"
            },
            "postgresWebApiDatabaseName": {
              "type": "string",
              "value": "[variables('postgresWebApiDatabaseName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'atlasVirtualNetwork')]",
        "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}', parameters('suffix')))]"
      ],
      "metadata": {
        "description": "Creates the database server, users and groups required for ohdsi webapi"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ohdsiWebApiWebapp",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          },
          "appServicePlanId": {
            "value": "[resourceId('Microsoft.Web/serverfarms', format('asp-{0}', parameters('suffix')))]"
          },
          "keyVaultName": {
            "value": "[format('kv-{0}', parameters('suffix'))]"
          },
          "jdbcConnectionStringWebapiAdmin": {
            "value": "[format('jdbc:postgresql://{0}:5432/{1}?user={2}&password={3}&sslmode=require', reference(resourceId('Microsoft.Resources/deployments', 'atlasDatabase'), '2022-09-01').outputs.postgresServerFullyQualifiedDomainName.value, reference(resourceId('Microsoft.Resources/deployments', 'atlasDatabase'), '2022-09-01').outputs.postgresWebApiDatabaseName.value, reference(resourceId('Microsoft.Resources/deployments', 'atlasDatabase'), '2022-09-01').outputs.postgresWebapiAdminUsername.value, parameters('postgresWebapiAdminPassword'))]"
          },
          "postgresWebapiAdminSecret": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasDatabase'), '2022-09-01').outputs.postgresWebapiAdminSecretName.value]"
          },
          "postgresWebapiAppSecret": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasDatabase'), '2022-09-01').outputs.postgresWebapiAppSecretName.value]"
          },
          "postgresWebapiAdminUsername": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasDatabase'), '2022-09-01').outputs.postgresWebapiAdminUsername.value]"
          },
          "postgresWebapiAppUsername": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasDatabase'), '2022-09-01').outputs.postgresWebapiAppUsername.value]"
          },
          "postgresWebApiSchemaName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasDatabase'), '2022-09-01').outputs.postgresSchemaName.value]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}', parameters('suffix')))]"
          },
          "webAppVirtualSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasVirtualNetwork'), '2022-09-01').outputs.webAppVirtualSubnetId.value]"
          },
          "webAppOutboundVirtualSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasVirtualNetwork'), '2022-09-01').outputs.webAppOutboundVirtualSubnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "3348702756594113150"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "suffix": {
              "type": "string"
            },
            "appServicePlanId": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "postgresWebApiSchemaName": {
              "type": "string"
            },
            "postgresWebapiAppUsername": {
              "type": "string"
            },
            "postgresWebapiAdminUsername": {
              "type": "string"
            },
            "jdbcConnectionStringWebapiAdmin": {
              "type": "securestring"
            },
            "postgresWebapiAppSecret": {
              "type": "securestring"
            },
            "postgresWebapiAdminSecret": {
              "type": "securestring"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "webAppVirtualSubnetId": {
              "type": "string"
            },
            "webAppOutboundVirtualSubnetId": {
              "type": "string"
            }
          },
          "variables": {
            "dockerRegistryServer": "https://index.docker.io/v1",
            "dockerImageName": "ohdsi/webapi",
            "dockerImageTag": "2.12.1",
            "flywayBaselineVersion": "2.2.5.20180212152023",
            "tenantId": "[subscription().tenantId]",
            "logCategories": [
              "AppServiceAppLogs",
              "AppServiceConsoleLogs",
              "AppServiceHTTPLogs"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'jdbc-connectionstring')]",
              "properties": {
                "value": "[parameters('jdbcConnectionStringWebapiAdmin')]"
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('id-ohdsiwebapi-{0}', parameters('suffix'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'add')]",
              "properties": {
                "accessPolicies": [
                  {
                    "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-ohdsiwebapi-{0}', parameters('suffix'))), '2023-01-31').principalId]",
                    "permissions": {
                      "secrets": [
                        "Get",
                        "List"
                      ]
                    },
                    "tenantId": "[variables('tenantId')]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-ohdsiwebapi-{0}', parameters('suffix')))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[format('app-ohdsiwebapi-{0}', parameters('suffix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "httpsOnly": true,
                "clientAffinityEnabled": false,
                "keyVaultReferenceIdentity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-ohdsiwebapi-{0}', parameters('suffix')))]",
                "serverFarmId": "[parameters('appServicePlanId')]",
                "siteConfig": {
                  "linuxFxVersion": "[format('DOCKER|{0}:{1}', variables('dockerImageName'), variables('dockerImageTag'))]",
                  "alwaysOn": true,
                  "ftpsState": "Disabled",
                  "appSettings": [
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "[variables('dockerRegistryServer')]"
                    },
                    {
                      "name": "DATASOURCE_DRIVERCLASSNAME",
                      "value": "org.postgresql.Driver"
                    },
                    {
                      "name": "DATASOURCE_OHDSI_SCHEMA",
                      "value": "[parameters('postgresWebApiSchemaName')]"
                    },
                    {
                      "name": "DATASOURCE_USERNAME",
                      "value": "[parameters('postgresWebapiAppUsername')]"
                    },
                    {
                      "name": "DATASOURCE_PASSWORD",
                      "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), parameters('postgresWebapiAppSecret'))]"
                    },
                    {
                      "name": "DATASOURCE_URL",
                      "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), 'jdbc-connectionstring')]"
                    },
                    {
                      "name": "FLYWAY_BASELINEDESCRIPTION",
                      "value": "Base Migration"
                    },
                    {
                      "name": "FLYWAY_BASELINEONMIGRATE",
                      "value": "true"
                    },
                    {
                      "name": "flyway_baselineVersionAsString",
                      "value": "[variables('flywayBaselineVersion')]"
                    },
                    {
                      "name": "FLYWAY_DATASOURCE_DRIVERCLASSNAME",
                      "value": "org.postgresql.Driver"
                    },
                    {
                      "name": "FLYWAY_DATASOURCE_USERNAME",
                      "value": "[parameters('postgresWebapiAdminUsername')]"
                    },
                    {
                      "name": "FLYWAY_DATASOURCE_PASSWORD",
                      "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), parameters('postgresWebapiAdminSecret'))]"
                    },
                    {
                      "name": "FLYWAY_DATASOURCE_URL",
                      "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), 'jdbc-connectionstring')]"
                    },
                    {
                      "name": "FLYWAY_LOCATIONS",
                      "value": "classpath:db/migration/postgresql"
                    },
                    {
                      "name": "FLYWAY_PLACEHOLDERS_OHDSISCHEMA",
                      "value": "[parameters('postgresWebApiSchemaName')]"
                    },
                    {
                      "name": "FLYWAY_SCHEMAS",
                      "value": "[parameters('postgresWebApiSchemaName')]"
                    },
                    {
                      "name": "FLYWAY_TABLE",
                      "value": "schema_history"
                    },
                    {
                      "name": "SECURITY_SSL_ENABLED",
                      "value": "false"
                    },
                    {
                      "name": "SECURITY_CORS_ENABLED",
                      "value": "true"
                    },
                    {
                      "name": "SECURITY_DB_DATASOURCE_AUTHENTICATIONQUERY",
                      "value": "select password from webapi_security.security where email = ?"
                    },
                    {
                      "name": "SECURITY_DB_DATASOURCE_PASSWORD",
                      "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), parameters('postgresWebapiAdminSecret'))]"
                    },
                    {
                      "name": "SECURITY_DB_DATASOURCE_SCHEMA",
                      "value": "webapi_security"
                    },
                    {
                      "name": "SECURITY_DB_DATASOURCE_URL",
                      "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), 'jdbc-connectionstring')]"
                    },
                    {
                      "name": "SECURITY_DB_DATASOURCE_USERNAME",
                      "value": "[parameters('postgresWebapiAdminUsername')]"
                    },
                    {
                      "name": "SECURITY_DURATION_INCREMENT",
                      "value": "10"
                    },
                    {
                      "name": "SECURITY_DURATION_INITIAL",
                      "value": "10"
                    },
                    {
                      "name": "SECURITY_MAXLOGINATTEMPTS",
                      "value": "3"
                    },
                    {
                      "name": "SECURITY_ORIGIN",
                      "value": "*"
                    },
                    {
                      "name": "SECURITY_PROVIDER",
                      "value": "AtlasRegularSecurity"
                    },
                    {
                      "name": "SPRING_BATCH_REPOSITORY_TABLEPREFIX",
                      "value": "webapi.BATCH_"
                    },
                    {
                      "name": "SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA",
                      "value": "[parameters('postgresWebApiSchemaName')]"
                    },
                    {
                      "name": "SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT",
                      "value": "org.hibernate.dialect.PostgreSQLDialect"
                    },
                    {
                      "name": "WEBSITE_HEALTHCHECK_MAXPINGFAILURES",
                      "value": "10"
                    },
                    {
                      "name": "WEBSITE_HTTPLOGGING_RETENTION_DAYS",
                      "value": "30"
                    },
                    {
                      "name": "WEBSITES_CONTAINER_START_TIME_LIMIT",
                      "value": "1800"
                    },
                    {
                      "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                      "value": "false"
                    },
                    {
                      "name": "WEBSITES_PORT",
                      "value": "8080"
                    }
                  ]
                },
                "virtualNetworkSubnetId": "[parameters('webAppOutboundVirtualSubnetId')]"
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-ohdsiwebapi-{0}', parameters('suffix'))))]": {}
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), 'jdbc-connectionstring')]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-ohdsiwebapi-{0}', parameters('suffix')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', format('app-ohdsiwebapi-{0}', parameters('suffix')))]",
              "name": "[format('app-ohdsiwebapi-{0}', parameters('suffix'))]",
              "properties": {
                "copy": [
                  {
                    "name": "logs",
                    "count": "[length(variables('logCategories'))]",
                    "input": {
                      "category": "[variables('logCategories')[copyIndex('logs')]]",
                      "enabled": true,
                      "retentionPolicy": {
                        "days": 30,
                        "enabled": true
                      }
                    }
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('app-ohdsiwebapi-{0}', parameters('suffix')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-07-01",
              "name": "[format('pe-{0}', format('app-ohdsiwebapi-{0}', parameters('suffix')))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('webAppVirtualSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('pe-{0}', format('app-ohdsiwebapi-{0}', parameters('suffix')))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', format('app-ohdsiwebapi-{0}', parameters('suffix')))]",
                      "groupIds": [
                        "sites"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('app-ohdsiwebapi-{0}', parameters('suffix')))]"
              ]
            }
          ],
          "outputs": {
            "ohdsiWebapiUrl": {
              "type": "string",
              "value": "[format('https://{0}/WebAPI/', reference(resourceId('Microsoft.Web/sites', format('app-ohdsiwebapi-{0}', parameters('suffix'))), '2022-03-01').defaultHostName)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('asp-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', 'atlasDatabase')]",
        "[resourceId('Microsoft.Resources/deployments', 'atlasVirtualNetwork')]",
        "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}', parameters('suffix')))]"
      ],
      "metadata": {
        "description": "Creates the ohdsi webapi"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "omopCDM",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "keyVaultName": {
            "value": "[format('kv-{0}', parameters('suffix'))]"
          },
          "cdmContainerUrl": {
            "value": "[parameters('cdmContainerUrl')]"
          },
          "cdmSasToken": {
            "value": "[parameters('cdmSasToken')]"
          },
          "postgresAtlasDatabaseName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasDatabase'), '2022-09-01').outputs.postgresWebApiDatabaseName.value]"
          },
          "postgresOMOPCDMDatabaseName": {
            "value": "[parameters('postgresOMOPCDMDatabaseName')]"
          },
          "postgresAdminPassword": {
            "value": "[parameters('postgresAdminPassword')]"
          },
          "postgresWebapiAdminPassword": {
            "value": "[parameters('postgresWebapiAdminPassword')]"
          },
          "postgresOMOPCDMPassword": {
            "value": "[parameters('postgresOMOPCDMPassword')]"
          },
          "postgresServerName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasDatabase'), '2022-09-01').outputs.postgresServerName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "5064692683648253269"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for all resources."
              }
            },
            "postgresAtlasDatabaseName": {
              "type": "string",
              "metadata": {
                "description": "The name of webapi CDM database"
              }
            },
            "postgresServerName": {
              "type": "string",
              "metadata": {
                "description": "The name of the postgres server"
              }
            },
            "cdmContainerUrl": {
              "type": "string",
              "metadata": {
                "description": "The URL of the container where the CDM data is stored"
              }
            },
            "cdmSasToken": {
              "type": "securestring",
              "metadata": {
                "description": "The SAS token to access the CDM data"
              }
            },
            "postgresOMOPCDMDatabaseName": {
              "type": "string",
              "metadata": {
                "description": "The name of the OMOP CDM database"
              }
            },
            "postgresAdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Admin password for the postgres server"
              }
            },
            "postgresWebapiAdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Admin password for the webapi database"
              }
            },
            "postgresOMOPCDMPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the cdm user"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "The name of the keyvault"
              }
            }
          },
          "variables": {
            "postgresOMOPCDMSchemaName": "cdm",
            "postgresOMOPResultsSchemaName": "cdm_results",
            "postgresOMOPTempSchemaName": "temp",
            "postgresOMOPCDMRole": "cdm_reader",
            "postgresOMOPCDMUsername": "cdm_user",
            "postgresOMOPCDMUserSecretName": "[format('{0}-cdm-user-password', parameters('postgresOMOPCDMDatabaseName'))]",
            "postgresOMOPCDMJDBCConnectionStringSecretName": "[format('{0}-cdm-jdbc-connection-string', parameters('postgresOMOPCDMDatabaseName'))]",
            "postgresWebAPISchemaName": "webapi",
            "postgresWebapiAdminUsername": "ohdsi_admin_user",
            "postgresAdminUsername": "postgres_admin"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), variables('postgresOMOPCDMUserSecretName'))]",
              "properties": {
                "value": "[parameters('postgresOMOPCDMPassword')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), variables('postgresOMOPCDMJDBCConnectionStringSecretName'))]",
              "properties": {
                "value": "[format('jdbc:postgresql://{0}:5432/{1}?user={2}&password={3}&sslmode=require', reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('postgresServerName')), '2022-12-01').fullyQualifiedDomainName, parameters('postgresOMOPCDMDatabaseName'), variables('postgresOMOPCDMUsername'), parameters('postgresOMOPCDMPassword'))]"
              }
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}/{1}', parameters('postgresServerName'), parameters('postgresOMOPCDMDatabaseName'))]",
              "properties": {
                "charset": "utf8",
                "collation": "en_US.utf8"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'atlasDatabase')]",
        "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', 'ohdsiWebApiWebapp')]"
      ],
      "metadata": {
        "description": "Creates OMOP CDM database"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "atlasUI",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          },
          "appServicePlanId": {
            "value": "[resourceId('Microsoft.Web/serverfarms', format('asp-{0}', parameters('suffix')))]"
          },
          "ohdsiWebApiUrl": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ohdsiWebApiWebapp'), '2022-09-01').outputs.ohdsiWebapiUrl.value]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}', parameters('suffix')))]"
          },
          "webAppVirtualSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasVirtualNetwork'), '2022-09-01').outputs.webAppVirtualSubnetId.value]"
          },
          "webAppOutboundVirtualSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'atlasVirtualNetwork'), '2022-09-01').outputs.webAppOutboundVirtualSubnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "12200703031180864509"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "suffix": {
              "type": "string"
            },
            "appServicePlanId": {
              "type": "string"
            },
            "ohdsiWebApiUrl": {
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "webAppVirtualSubnetId": {
              "type": "string"
            },
            "webAppOutboundVirtualSubnetId": {
              "type": "string"
            }
          },
          "variables": {
            "$fxv#0": "define([], function () {\n  var configLocal = {};\n\n  // clearing local storage otherwise source cache will obscure the override settings\n  localStorage.clear();\n\n  // WebAPI\n  configLocal.api = {\n    name: \"OHDSI\",\n    url: \"$OHDSI_WEBAPI_URL\",\n  };\n\n  configLocal.cohortComparisonResultsEnabled = false;\n  configLocal.userAuthenticationEnabled = true;\n  configLocal.plpResultsEnabled = false;\n\n  configLocal.authProviders = [\n    {\n      name: \"Local Security Test DB\",\n      url: \"user/login/db\",\n      ajax: true,\n      icon: \"fa fa-database\",\n      isUseCredentialsForm: true,\n    },\n  ];\n\n  return configLocal;\n});\n",
            "dockerRegistryServer": "https://index.docker.io/v1",
            "dockerImageName": "ohdsi/atlas",
            "dockerImageTag": "2.13.0",
            "shareName": "atlas",
            "mountPath": "/etc/atlas",
            "logCategories": [
              "AppServiceAppLogs",
              "AppServiceConsoleLogs",
              "AppServiceHTTPLogs"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}/{2}', format('stohdsi{0}', parameters('suffix')), 'default', variables('shareName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', format('stohdsi{0}', parameters('suffix')), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}', format('stohdsi{0}', parameters('suffix')), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('stohdsi{0}', parameters('suffix')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-04-01",
              "name": "[format('stohdsi{0}', parameters('suffix'))]",
              "location": "[parameters('location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              }
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "deployment-ohdsi-atlas-config-file",
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "properties": {
                "azCliVersion": "2.42.0",
                "timeout": "PT5M",
                "retentionInterval": "PT1H",
                "environmentVariables": [
                  {
                    "name": "AZURE_STORAGE_ACCOUNT",
                    "value": "[format('stohdsi{0}', parameters('suffix'))]"
                  },
                  {
                    "name": "AZURE_STORAGE_KEY",
                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', format('stohdsi{0}', parameters('suffix'))), '2021-04-01').keys[0].value]"
                  },
                  {
                    "name": "OHDSI_WEBAPI_URL",
                    "value": "[parameters('ohdsiWebApiUrl')]"
                  },
                  {
                    "name": "CONTENT",
                    "value": "[variables('$fxv#0')]"
                  },
                  {
                    "name": "SHARE_NAME",
                    "value": "[variables('shareName')]"
                  }
                ],
                "scriptContent": "    apk --update add gettext\n    echo \"$CONTENT\" > config-local-temp.js\n    envsubst < config-local-temp.js > config-local.js\n    az storage file upload --source config-local.js -s $SHARE_NAME\n    "
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('stohdsi{0}', parameters('suffix')))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[format('app-ohdsiatlas-{0}', parameters('suffix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "httpsOnly": true,
                "clientAffinityEnabled": false,
                "serverFarmId": "[parameters('appServicePlanId')]",
                "siteConfig": {
                  "azureStorageAccounts": {
                    "[format('{0}', variables('shareName'))]": {
                      "type": "AzureFiles",
                      "shareName": "[variables('shareName')]",
                      "mountPath": "[variables('mountPath')]",
                      "accountName": "[format('stohdsi{0}', parameters('suffix'))]",
                      "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', format('stohdsi{0}', parameters('suffix'))), '2021-04-01').keys[0].value]"
                    }
                  },
                  "linuxFxVersion": "[format('DOCKER|{0}:{1}', variables('dockerImageName'), variables('dockerImageTag'))]",
                  "ftpsState": "Disabled",
                  "appSettings": [
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "[variables('dockerRegistryServer')]"
                    },
                    {
                      "name": "WEBSITE_HEALTHCHECK_MAXPINGFAILURES",
                      "value": "10"
                    },
                    {
                      "name": "WEBAPI_URL",
                      "value": "[parameters('ohdsiWebApiUrl')]"
                    },
                    {
                      "name": "WEBSITE_HTTPLOGGING_RETENTION_DAYS",
                      "value": "30"
                    },
                    {
                      "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                      "value": "false"
                    },
                    {
                      "name": "WEBSITES_PORT",
                      "value": "8080"
                    }
                  ]
                },
                "virtualNetworkSubnetId": "[parameters('webAppOutboundVirtualSubnetId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deploymentScripts', 'deployment-ohdsi-atlas-config-file')]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('stohdsi{0}', parameters('suffix')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', format('app-ohdsiatlas-{0}', parameters('suffix')))]",
              "name": "[format('app-ohdsiatlas-{0}', parameters('suffix'))]",
              "properties": {
                "copy": [
                  {
                    "name": "logs",
                    "count": "[length(variables('logCategories'))]",
                    "input": {
                      "category": "[variables('logCategories')[copyIndex('logs')]]",
                      "enabled": true,
                      "retentionPolicy": {
                        "days": 30,
                        "enabled": true
                      }
                    }
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('app-ohdsiatlas-{0}', parameters('suffix')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-07-01",
              "name": "[format('pe-{0}', format('app-ohdsiatlas-{0}', parameters('suffix')))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('webAppVirtualSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('pe-{0}', format('app-ohdsiatlas-{0}', parameters('suffix')))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', format('app-ohdsiatlas-{0}', parameters('suffix')))]",
                      "groupIds": [
                        "sites"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('app-ohdsiatlas-{0}', parameters('suffix')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('asp-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', 'atlasVirtualNetwork')]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', 'ohdsiWebApiWebapp')]"
      ],
      "metadata": {
        "description": "Creates the ohdsi atlas UI"
      }
    }
  ],
  "outputs": {
    "ohdsiWebapiUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ohdsiWebApiWebapp'), '2022-09-01').outputs.ohdsiWebapiUrl.value]"
    }
  }
}